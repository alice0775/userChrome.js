スクリプトファイルの探し方:
https://github.com/alice0775/userChrome.js を開いて[Go to file]をクリック, 左のテキスト入力欄に探したいスクリプトのファイル名を入力, リスト内の該当するものをクリック
  ディレクトリ番号が大きいものほど新しく/更新されたスクリプト
  FirefoxのバージョンNoより大きいディレクトリ番号内のスクリプトはそのバージョンでは動かない
  FirefoxのバージョンNoより小さいディレクトリ番号内のスクリプトは動くかも知れない

スクリプトの保存方法:
スクリプト名をクリック、[RAW]ボタンをクリック、名前を付けて保存
ファイルはUTF-8のBOMなしで保存


userchrome.jsのインストール方法 方法 その1:
1. アプリケーションインストールフォルダ(例えば, %ProgramFiles%\Mozilla Firefox)直下に以下のファイルを保存する
117/install_folder/config.js

2. アプリケーションインストールフォルダ\defaults\pref 直下に以下のファイルを保存する
117/install_folder\defaults\pref\config-prefs.js


3. プロファイルフォルダ(例えば, %APPDATA%\Mozilla\Firefox\Profiles\hogehoge.default)直下に chrome フォルダを作り以下のファイルを保存する
135/userChrome.js または 106/userChrome.js
必要に応じて 72/userChrome.css

4. 必要なスクリプトファイルを保存する

5. 念のため 一回 %ProgramFiles%\Mozilla Firefox\firefox.exe -purgecaches オプション付きで起動する



userchrome.jsのインストール方法 方法 その2(https://github.com/xiaoxiaoflood/firefox-scripts):
136以上はhttps://github.com/xiaoxiaoflood/firefox-scripts/issues/343も参照


1. アプリケーションインストールフォルダ(例えば, %ProgramFiles%\Mozilla Firefox)直下に以下のファイルを解凍保存する
  https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/fx-folder.zip

2, プロファイルフォルダ(例えば, %APPDATA%\Mozilla\Firefox\Profiles\hogehoge.default)直下に chrome フォルダを作り以下のファイルをダウンロードし解凍保存する

  a)スクリプトにしか興味がない
    https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/utils_scripts_only.zip

  b)レガシー拡張機能にしか興味がない(ここを見る人には関係ない)
    https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/utils_extensions_only.zip
    
  c)スクリプトとレガシー拡張機能の両方に興味がある
    https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/utils.zip
    

3. 必要に応じ、スクリプトの日本語ファイル名に対応するため 2.で保存した chrome/utils/userChrome.jsm 内の

   .getURLSpecFromDir(this.chromedir) + filename,
   を
   .getURLSpecFromActualFile(aFile),
   に置き換える

4. スクリプトファイルを保存する

5.https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/chrome/rebuild_userChrome.uc.js を使う場合は、必要に応じ、日本語スクリプト名に対応するため,

   editorArgs.push(script.file.path);
   を
   editorArgs.push(Services.io.newURI(script.url)
           .QueryInterface(Ci.nsIFileURL).file.path);
   に、さらに

   process.run(
   を
   process.runw(
   に置き換える
   
 ※ Nightlyでは、security.browser_xhtml_csp.enabled を falseにする。(もしくは、セキュリティを気にする場合はすべての'onほにゃらら'をイベントリスナーに変更する必要がある)


6. 念のため 一回 %ProgramFiles%\Mozilla Firefox\firefox.exe -purgecaches オプション付きで起動する



userchrome.jsのインストール方法 方法 その3(https://bitbucket.org/BSTweaker/userchromejs/src/master/loader/):

1. config.jsが動くようにしておく (例えば その1の1. 2. その2の1. 2.を実行)

2. https://bitbucket.org/BSTweaker/userchromejs/src/master/loader/ 
   上記に従いconfig.jsコードを修正

3. chromeフォルダに以下のファイルを保存
   https://bitbucket.org/BSTweaker/userchromejs/src/master/loader/UserChromeJSLoader.mjs

4. 必要に応じ、スクリプトの読み込み順番(大小文字を区別しない)に並び変えるため
    const ucjsLoaderConfig = {
    を
    const ucjsLoaderConfig = {
        loadScriptsInOrderIgnoreCase : true,
    に置き換え後、

    get sortedScripts() {
        return this.scripts.sort((a, b) => {
            return a.path > b.path ? 1 : -1;
        });
    }
    を
    get sortedScripts() {
      if (ucjsLoaderConfig.loadScriptsInOrderIgnoreCase) {
        return this.scripts.sort((a, b) => {
            return a.path.toLowerCase() > b.path.toLowerCase() ? 1 : -1;
        });
      } else {
        return this.scripts.sort((a, b) => {
            return a.path > b.path ? 1 : -1;
        });
      }
    }
    に置き換える

5. 必要に応じ、スクリプトの有効無効を中クリックで行えるようにしかつメニューを閉じない
    toolsMenu.addEventListener("popupshowing", event => {
    の前に
    win.document.getElementById("UCJSLoader-menu").addEventListener("mouseup", event => {
  		const menuitem = event.target;
  		if (event.button == 1) 
  		{
  			menuitem.setAttribute('closemenu', 'none');
  			menuitem.parentNode.addEventListener('popuphidden', () => {
  				menuitem.removeAttribute('closemenu');
  			}, { once: true });
  			if (event.ctrlKey)
  		  	menuitem.parentNode.hidePopup();
  		}
    });
    を追加し

    if (event.type === "command" && event.button === 0) script.disabled = !script.disabled;
    を
    if (event.type === "command" && event.button <= 1) script.disabled = !script.disabled;
    に置き換える


6. 必要なスクリプトファイルを保存する


7. 念のため 一回 %ProgramFiles%\Mozilla Firefox\firefox.exe -purgecaches オプション付きで起動する



userchrome.jsのインストール方法 方法 その4(https://github.com/onemen/TabMixPlus/tree/main?tab=readme-ov-file):

1. アプリケーションインストールフォルダ(例えば, %ProgramFiles%\Mozilla Firefox)直下に以下のファイルを解凍保存する
  https://github.com/onemen/TabMixPlus/releases/download/dev-build/fx-folder.zip

2, プロファイルフォルダ(例えば, %APPDATA%\Mozilla\Firefox\Profiles\hogehoge.default)直下に chrome フォルダを作り以下のファイルをダウンロードし解凍保存する
  https://github.com/onemen/TabMixPlus/releases/download/dev-build/utils.zip


3. Firefoxの初期化中にスクリプトが実行されないようにするため,展開保存した utils\userChrome.js 内の
      Services.scriptloader.loadSubScript(script.url + '?' + script.file.lastModifiedTime,
                                          script.onlyonce ? { window: win } : win);
     を

      function setTimeout(callback, ms) {
        let _timer = Cc['@mozilla.org/timer;1']
                       .createInstance(Ci.nsITimer);
        _timer.initWithCallback({notify: callback}, ms, Ci.nsITimer.TYPE_ONE_SHOT);
        return _timer;
      }
      function clearTimeout(timer) {
        timer.cancel();
      }
      let timer = setTimeout(() => {
            Services.scriptloader.loadSubScript(script.url + '?' + script.file.lastModifiedTime,
                                                script.onlyonce ? { window: win } : win);
      }, 0);

     に置き換える。さらに


     aSubject.addEventListener('DOMContentLoaded', this, {once: true});

     を

     aSubject.addEventListener('load', this, {once: true});

     に置き換える。

4.必要に応じ, 日本語スクリプト名に対応するため utils\userChrome.js を
      url: Services.io.getProtocolHandler('file').QueryInterface(Ci.nsIFileProtocolHandler).getURLSpecFromDir(this.chromedir) + filename,
   を

   url:Services.io
          .getProtocolHandler('file')
          .QueryInterface(Ci.nsIFileProtocolHandler)
          .getURLSpecFromActualFile(aFile),
    に置き換える。

5. 必要なスクリプトファイルを保存する

6. https://raw.githubusercontent.com/xiaoxiaoflood/firefox-scripts/master/chrome/rebuild_userChrome.uc.js を使う場合は、必要に応じ、日本語スクリプト名に対応するため,

   editorArgs.push(script.file.path);
   を
   editorArgs.push(Services.io.newURI(script.url)
           .QueryInterface(Ci.nsIFileURL).file.path);
   に、さらに

   process.run(
   を
   process.runw(
   に置き換える
   
 ※ Nightlyでは、security.browser_xhtml_csp.enabled を falseにする。(もしくは、セキュリティを気にする場合はすべての'onほにゃらら'をイベントリスナーに変更する必要がある)

7. 念のため 一回 %ProgramFiles%\Mozilla Firefox\firefox.exe -purgecaches オプション付きで起動する


* 「必要に応じ」はやらなくてもいいよ

DeepL.com（無料版）で翻訳しました。


免責事項
    一切の責任を負いません。
    自己の責任の上で使用して下さい。
